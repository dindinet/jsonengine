#summary How to use jsonengine

== REST API ==

jsonengine provides REST API described below for creating, reading, updating and deleting JSON documents.

=== POST/PUT ===

To create or update a JSON document, you can use POST or PUT HTTP method with "doc" parameter.

{{{
/POST /<docType>
}}}

{{{
/PUT /<docType>
}}}

  * URI values
    * *docType* (required): DocType (document type) of the JSON doc. e.g. "address" for saving an address info JSON doct. Similar to table in RDB.

  * Parameters
    * *doc* (required): JSON doc to be created/updated.
      * The JSON doc should be URL encoded.
      * If this JSON doc has a `_`docId property, jsonengine will try to update the existing JSON doc
      * If this JSON doc has no `_`docId property, jsonengine will create and save a new JSON doc. Client can retrive the new `_`docId property from the result JSON doc.

  * Results
    * updated JSON doc.
      * This JSON doc includes `_`docId and `_`updatedAt property generated by jsonengine.

  * Notes


=== GET ===


=== DELETE ===


== JSON Document Format ==

jsonengine can handle any kind of JSON documents, with the following rules.

=== Restrictions ===

  * Size: because of the restriction of App Engine, a JSON document should be smaller than 1MB.
  * Indexed property: any properties with literal value (i.e. string, boolean and number) will be added to the jsonengine's internal index automatically, so that the document can be filtered or sorted by the property on queries. The size of the indexed property (= the property name length + property value length) should be less than 500 characters. If you want to store property value longer than 500 characters, you need to exclude the property from index by putting "`_`" on the property name as described below.

=== Special properties ===

The following properties are handled specially in jsonengine:

  * *`_`docId*: an unique ID of each JSON document. 
  * *`_`updatedAt*: a long value of timestamp when the JSON document has been updated.
  * *`_`<any property name>*: if you put any property name starts with "`_`", the property will not be added to the index.
  * These rules will not be applied to any child JSON documents.